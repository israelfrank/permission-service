// Code generated by protoc-gen-go. DO NOT EDIT.
// source: permission.proto

package permission

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreatePermissionRequest struct {
	// The ID of the file which is being permitted.
	FileID string `protobuf:"bytes,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	// The ID of the user that's given the permission.
	UserID string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	// The children of the file which is being permitted to inherit the permission.
	Children             []string `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePermissionRequest) Reset()         { *m = CreatePermissionRequest{} }
func (m *CreatePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePermissionRequest) ProtoMessage()    {}
func (*CreatePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}

func (m *CreatePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePermissionRequest.Unmarshal(m, b)
}
func (m *CreatePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePermissionRequest.Marshal(b, m, deterministic)
}
func (m *CreatePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePermissionRequest.Merge(m, src)
}
func (m *CreatePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePermissionRequest.Size(m)
}
func (m *CreatePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePermissionRequest proto.InternalMessageInfo

func (m *CreatePermissionRequest) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func (m *CreatePermissionRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreatePermissionRequest) GetChildren() []string {
	if m != nil {
		return m.Children
	}
	return nil
}

type CreatePermissionResponse struct {
	// The ID of the permission that's been created.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePermissionResponse) Reset()         { *m = CreatePermissionResponse{} }
func (m *CreatePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePermissionResponse) ProtoMessage()    {}
func (*CreatePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{1}
}

func (m *CreatePermissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePermissionResponse.Unmarshal(m, b)
}
func (m *CreatePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePermissionResponse.Marshal(b, m, deterministic)
}
func (m *CreatePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePermissionResponse.Merge(m, src)
}
func (m *CreatePermissionResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePermissionResponse.Size(m)
}
func (m *CreatePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePermissionResponse proto.InternalMessageInfo

func (m *CreatePermissionResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreatePermissionRequest)(nil), "permission.CreatePermissionRequest")
	proto.RegisterType((*CreatePermissionResponse)(nil), "permission.CreatePermissionResponse")
}

func init() { proto.RegisterFile("permission.proto", fileDescriptor_c837ef01cbda0ad8) }

var fileDescriptor_c837ef01cbda0ad8 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x48, 0x2d, 0xca,
	0xcd, 0x2c, 0x2e, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xa5, 0x72, 0x89, 0x3b, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0x06, 0xc0, 0xc5, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8, 0xd2, 0x32, 0x73, 0x52, 0x3d, 0x5d, 0x24, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x90, 0x78, 0x69, 0x71, 0x6a, 0x11, 0x50, 0x9c, 0x09,
	0x22, 0x0e, 0xe1, 0x09, 0x49, 0x71, 0x71, 0x24, 0x67, 0x64, 0xe6, 0xa4, 0x14, 0xa5, 0xe6, 0x49,
	0x30, 0x2b, 0x30, 0x03, 0x65, 0xe0, 0x7c, 0x25, 0x2d, 0x2e, 0x09, 0x4c, 0x6b, 0x8a, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xa0, 0x76, 0x00, 0x59, 0x46, 0xb9, 0x5c,
	0x5c, 0x08, 0x55, 0x42, 0xf1, 0x5c, 0x02, 0xe8, 0x3a, 0x85, 0x94, 0xf5, 0x90, 0xfc, 0x84, 0xc3,
	0xf9, 0x52, 0x2a, 0xf8, 0x15, 0x41, 0x2c, 0x57, 0x62, 0x48, 0x62, 0x03, 0x07, 0x8a, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0xed, 0xb9, 0xd8, 0xfd, 0x28, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermissionClient is the client API for Permission service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermissionClient interface {
	CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*CreatePermissionResponse, error)
}

type permissionClient struct {
	cc *grpc.ClientConn
}

func NewPermissionClient(cc *grpc.ClientConn) PermissionClient {
	return &permissionClient{cc}
}

func (c *permissionClient) CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*CreatePermissionResponse, error) {
	out := new(CreatePermissionResponse)
	err := c.cc.Invoke(ctx, "/permission.Permission/CreatePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionServer is the server API for Permission service.
type PermissionServer interface {
	CreatePermission(context.Context, *CreatePermissionRequest) (*CreatePermissionResponse, error)
}

// UnimplementedPermissionServer can be embedded to have forward compatible implementations.
type UnimplementedPermissionServer struct {
}

func (*UnimplementedPermissionServer) CreatePermission(ctx context.Context, req *CreatePermissionRequest) (*CreatePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePermission not implemented")
}

func RegisterPermissionServer(s *grpc.Server, srv PermissionServer) {
	s.RegisterService(&_Permission_serviceDesc, srv)
}

func _Permission_CreatePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CreatePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permission.Permission/CreatePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CreatePermission(ctx, req.(*CreatePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Permission_serviceDesc = grpc.ServiceDesc{
	ServiceName: "permission.Permission",
	HandlerType: (*PermissionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePermission",
			Handler:    _Permission_CreatePermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "permission.proto",
}
